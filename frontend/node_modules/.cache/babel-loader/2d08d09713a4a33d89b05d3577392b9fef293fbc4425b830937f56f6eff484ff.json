{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Ruleengine\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RuleForm from './components/RuleForm';\nimport RuleList from './components/RuleList';\nimport EvaluateForm from './components/EvaluateForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [combinedAST, setCombinedAST] = useState(null); // State to store the combined AST\n  const [rules, setRules] = useState([]); // State to store the rules list\n\n  // Function to fetch all available rules from the backend\n  const fetchRules = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/rules');\n      setRules(response.data); // Update the state with fetched rules\n    } catch (err) {\n      console.error('Error fetching rules:', err);\n    }\n  };\n\n  // Fetch the rules once the component mounts\n  useEffect(() => {\n    fetchRules(); // Fetch rules when the component is mounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center text-3xl font-bold text-gray-800\",\n      children: \"Rule Engine with AST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(RuleForm, {\n        refreshRules: fetchRules\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(RuleList, {\n        setCombinedAST: setCombinedAST,\n        rules: rules,\n        fetchRules: fetchRules\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), combinedAST && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(EvaluateForm, {\n        combinedAST: combinedAST\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XodhfQHTL7L7OES7vuU0zDth3b8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RuleForm","RuleList","EvaluateForm","axios","jsxDEV","_jsxDEV","App","_s","combinedAST","setCombinedAST","rules","setRules","fetchRules","response","get","data","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","refreshRules","_c","$RefreshReg$"],"sources":["E:/project/Ruleengine/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport RuleForm from './components/RuleForm';\r\nimport RuleList from './components/RuleList';\r\nimport EvaluateForm from './components/EvaluateForm';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [combinedAST, setCombinedAST] = useState(null);  // State to store the combined AST\r\n  const [rules, setRules] = useState([]);  // State to store the rules list\r\n\r\n  // Function to fetch all available rules from the backend\r\n  const fetchRules = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/rules');\r\n      setRules(response.data);  // Update the state with fetched rules\r\n    } catch (err) {\r\n      console.error('Error fetching rules:', err);\r\n    }\r\n  };\r\n\r\n  // Fetch the rules once the component mounts\r\n  useEffect(() => {\r\n    fetchRules();  // Fetch rules when the component is mounted\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-8\">\r\n      <h1 className=\"text-center text-3xl font-bold text-gray-800\">Rule Engine with AST</h1>\r\n\r\n      {/* Section to Create a New Rule */}\r\n      <div className=\"container mx-auto mt-8\">\r\n        <RuleForm refreshRules={fetchRules} />  {/* Pass fetchRules to RuleForm */}\r\n      </div>\r\n\r\n      {/* Section to Combine Rules */}\r\n      <div className=\"container mx-auto mt-8\">\r\n        <RuleList setCombinedAST={setCombinedAST} rules={rules} fetchRules={fetchRules} />  {/* Pass fetchRules and rules to RuleList */}\r\n      </div>\r\n\r\n      {/* Section to Evaluate Combined Rule - only visible after rule combination */}\r\n      {combinedAST && (\r\n        <div className=\"container mx-auto mt-8\">\r\n          <EvaluateForm combinedAST={combinedAST} />  {/* Pass the combined AST to the evaluation form */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACvD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEzC;EACA,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC;MACnEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;IAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC7C;EACF,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC,CAAC,CAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKc,SAAS,EAAC,+BAA+B;IAAAC,QAAA,gBAC5Cf,OAAA;MAAIc,SAAS,EAAC,8CAA8C;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGtFnB,OAAA;MAAKc,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrCf,OAAA,CAACL,QAAQ;QAACyB,YAAY,EAAEb;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,MAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAGNnB,OAAA;MAAKc,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrCf,OAAA,CAACJ,QAAQ;QAACQ,cAAc,EAAEA,cAAe;QAACC,KAAK,EAAEA,KAAM;QAACE,UAAU,EAAEA;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,MAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC,EAGLhB,WAAW,iBACVH,OAAA;MAAKc,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrCf,OAAA,CAACH,YAAY;QAACM,WAAW,EAAEA;MAAY;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,MAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjB,EAAA,CAzCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}