{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Ruleengine\\\\frontend\\\\src\\\\components\\\\RuleList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RuleList = ({\n  setCombinedAST\n}) => {\n  _s();\n  const [rules, setRules] = useState([]);\n  const [selectedRules, setSelectedRules] = useState([]);\n\n  // Fetch rules from backend on component mount\n  useEffect(() => {\n    const fetchRules = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/rules');\n        setRules(response.data);\n      } catch (err) {\n        console.error('Error fetching rules:', err);\n      }\n    };\n    fetchRules();\n  }, []);\n\n  // Handle combining selected rules\n  const handleCombine = async () => {\n    if (selectedRules.length < 2) {\n      alert('Please select at least two rules to combine.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/rules/combine-rules', {\n        ruleIds: selectedRules\n      });\n      console.log('Combined AST:', response.data.combinedAST);\n      setCombinedAST(response.data.combinedAST);\n    } catch (err) {\n      console.error('Error combining rules:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rules.map(rule => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: rule._id,\n          onChange: e => {\n            if (e.target.checked) {\n              setSelectedRules([...selectedRules, rule._id]);\n            } else {\n              setSelectedRules(selectedRules.filter(id => id !== rule._id));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), rule.ruleName]\n      }, rule._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCombine,\n      children: \"Combine Selected Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(RuleList, \"ONu7+8iHU0GSCX5TCEXxHIvwFmw=\");\n_c = RuleList;\nexport default RuleList;\nvar _c;\n$RefreshReg$(_c, \"RuleList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","RuleList","setCombinedAST","_s","rules","setRules","selectedRules","setSelectedRules","fetchRules","response","get","data","err","console","error","handleCombine","length","alert","post","ruleIds","log","combinedAST","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rule","type","value","_id","onChange","e","target","checked","filter","id","ruleName","onClick","_c","$RefreshReg$"],"sources":["E:/project/Ruleengine/frontend/src/components/RuleList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RuleList = ({ setCombinedAST }) => {\r\n  const [rules, setRules] = useState([]);\r\n  const [selectedRules, setSelectedRules] = useState([]);\r\n\r\n  // Fetch rules from backend on component mount\r\n  useEffect(() => {\r\n    const fetchRules = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/rules');\r\n        setRules(response.data);\r\n      } catch (err) {\r\n        console.error('Error fetching rules:', err);\r\n      }\r\n    };\r\n    fetchRules();\r\n  }, []);\r\n\r\n  // Handle combining selected rules\r\n  const handleCombine = async () => {\r\n    if (selectedRules.length < 2) {\r\n      alert('Please select at least two rules to combine.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/rules/combine-rules', {\r\n        ruleIds: selectedRules,\r\n      });\r\n      console.log('Combined AST:', response.data.combinedAST);\r\n      setCombinedAST(response.data.combinedAST);\r\n    } catch (err) {\r\n      console.error('Error combining rules:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Available Rules</h2>\r\n      <ul>\r\n        {rules.map(rule => (\r\n          <li key={rule._id}>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={rule._id}\r\n              onChange={(e) => {\r\n                if (e.target.checked) {\r\n                  setSelectedRules([...selectedRules, rule._id]);\r\n                } else {\r\n                  setSelectedRules(selectedRules.filter(id => id !== rule._id));\r\n                }\r\n              }}\r\n            />\r\n            {rule.ruleName}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleCombine}>Combine Selected Rules</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RuleList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}