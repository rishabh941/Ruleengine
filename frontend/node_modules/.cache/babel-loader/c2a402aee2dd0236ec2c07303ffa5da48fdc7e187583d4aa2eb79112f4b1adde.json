{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\Ruleengine\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RuleForm from './components/RuleForm';\nimport RuleList from './components/RuleList';\nimport EvaluateForm from './components/EvaluateForm';\nimport Navbar from './components/Navbar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [combinedAST, setCombinedAST] = useState(null); // State to store the combined AST\n  const [rules, setRules] = useState([]); // State to store the fetched rules\n\n  // Base URL for the API (read from environment variable)\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api/rules';\n\n  // Function to fetch the rules from the backend\n  const fetchRules = async () => {\n    try {\n      const response = await axios.get(`${API_URL}`);\n      setRules(response.data); // Update the state with the fetched rules\n    } catch (error) {\n      console.error('Error fetching rules:', error);\n    }\n  };\n\n  // Fetch the rules when the component mounts\n  useEffect(() => {\n    fetchRules();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-r from-gray-100 via-blue-200 to-purple-300 py-10 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto space-y-12 pt-24\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"create-rule\",\n        className: \"max-w-lg mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(RuleForm, {\n          refreshRules: fetchRules\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"combine-rules\",\n        className: \"max-w-lg mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(RuleList, {\n          setCombinedAST: setCombinedAST,\n          rules: rules\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), combinedAST && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"evaluate-rule\",\n        className: \"max-w-lg mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(EvaluateForm, {\n          combinedAST: combinedAST\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XodhfQHTL7L7OES7vuU0zDth3b8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RuleForm","RuleList","EvaluateForm","Navbar","axios","jsxDEV","_jsxDEV","App","_s","combinedAST","setCombinedAST","rules","setRules","API_URL","process","env","REACT_APP_API_URL","fetchRules","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","refreshRules","_c","$RefreshReg$"],"sources":["E:/project/Ruleengine/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport RuleForm from './components/RuleForm';\r\nimport RuleList from './components/RuleList';\r\nimport EvaluateForm from './components/EvaluateForm';\r\nimport Navbar from './components/Navbar';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [combinedAST, setCombinedAST] = useState(null);  // State to store the combined AST\r\n  const [rules, setRules] = useState([]);  // State to store the fetched rules\r\n\r\n  // Base URL for the API (read from environment variable)\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api/rules';\r\n\r\n  // Function to fetch the rules from the backend\r\n  const fetchRules = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}`);\r\n      setRules(response.data);  // Update the state with the fetched rules\r\n    } catch (error) {\r\n      console.error('Error fetching rules:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch the rules when the component mounts\r\n  useEffect(() => {\r\n    fetchRules();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-r from-gray-100 via-blue-200 to-purple-300 py-10 px-4\">\r\n      {/* Navbar */}\r\n      <Navbar />\r\n\r\n      <div className=\"container mx-auto space-y-12 pt-24\">\r\n        {/* Section to Create a New Rule */}\r\n        <div id=\"create-rule\" className=\"max-w-lg mx-auto\">\r\n          <RuleForm refreshRules={fetchRules} />  {/* Pass fetchRules to RuleForm */}\r\n        </div>\r\n\r\n        {/* Section to Combine Rules */}\r\n        <div id=\"combine-rules\" className=\"max-w-lg mx-auto\">\r\n          <RuleList setCombinedAST={setCombinedAST} rules={rules} />  {/* Pass rules to RuleList */}\r\n        </div>\r\n\r\n        {/* Section to Evaluate Combined Rule - only visible after rule combination */}\r\n        {combinedAST && (\r\n          <div id=\"evaluate-rule\" className=\"max-w-lg mx-auto\">\r\n            <EvaluateForm combinedAST={combinedAST} />  {/* Pass the combined AST to the evaluation form */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}